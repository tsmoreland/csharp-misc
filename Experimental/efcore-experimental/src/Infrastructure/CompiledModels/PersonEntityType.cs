// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Tsmoreland.EntityFramework.Core.Experimental.Domain.Models;
using Tsmoreland.EntityFramework.Core.Experimental.Infrastructure.Configuration;

#pragma warning disable 219, 612, 618
#nullable enable

namespace Tsmoreland.EntityFramework.Core.Experimental.Infrastructure.CompiledModels
{
    internal partial class PersonEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Tsmoreland.EntityFramework.Core.Experimental.Domain.Models.Person",
                typeof(Person),
                baseEntityType);

            var lastName = runtimeEntityType.AddProperty(
                "LastName",
                typeof(string),
                propertyInfo: typeof(Person).GetProperty("LastName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Person).GetField("<LastName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                maxLength: 100);
            lastName.AddAnnotation("Relational:ColumnName", "last_name");

            var id = runtimeEntityType.AddProperty(
                "Id",
                typeof(int),
                propertyInfo: typeof(Person).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Person).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                valueGeneratorFactory: new PeopleValueGeneratorFactory().Create);
            id.AddAnnotation("Relational:ColumnName", "id");

            var _firstName = runtimeEntityType.AddProperty(
                "_firstName",
                typeof(string),
                nullable: true);
            _firstName.AddAnnotation("Relational:ColumnName", "first_name");

            var _firstname = runtimeEntityType.AddProperty(
                "_firstname",
                typeof(string),
                fieldInfo: typeof(Person).GetField("_firstname", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                propertyAccessMode: PropertyAccessMode.Field,
                maxLength: 100);

            var key = runtimeEntityType.AddKey(
                new[] { lastName, id });
            runtimeEntityType.SetPrimaryKey(key);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "people");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
