//
// Copyright ï¿½2022 Terryy Moreland
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

import "oaidl.idl";
import "ocidl.idl";


typedef
[
    uuid(C868E4C5-4139-4961-A643-D8DC28264504),
    version(1.0),
    helpstring("formally defined GUID UDT")
]
struct UDTGuid {

    LONG Data1;
    SHORT Data2;
    SHORT Data3;
    LONGLONG Data4;
} UDTGuid;

[
	object,
	uuid(f2b23b2b-e773-457a-b277-36b21e562fd5),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface ISimpleObject : IDispatch
{
    [id(1), helpstring("Name"), propget]
    HRESULT Name([ out, retval ] BSTR * result);

    [id(2), helpstring("abitrary mutable integer"), propget]
    HRESULT Numeric([ out, retval ] LONG * result);

    [id(2), helpstring("abitrary mutable integer"), propput]
    HRESULT Numeric([in] LONG result);

    [id(3), helpstring("Id"), propget]
    HRESULT Id([ out, retval ] GUID * result);

    [id(4), helpstring("Convert string to lowercase")]
    HRESULT ConvertToString([in] GUID input, [ out, retval ] BSTR * result);
};

[
	object,
	uuid(40EF1B4A-2C28-414E-8831-B28A1234911E),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface ISimpleObject2 : ISimpleObject
{
    [id(5), helpstring("Description"), propget]
    HRESULT Description([ out, retval ] BSTR * result);
}


[
	uuid(580185ad-317a-4eb7-a6ab-48ebd08c8407),
	version(1.0),
]
library SimpleInProcessCOMLib
{
	importlib("stdole2.tlb");
	[
		uuid(71A4D526-4FAD-4D4B-8A6E-78AFCABD7F63)
	]
	dispinterface _ISimpleObjectEvents
	{
		properties:
		methods:
            [id(1), helpstring("simple property changed notification")]
            HRESULT OnPropertyChanged([in] BSTR propertyName);
	};
	[
		uuid(e3d3572d-9e25-4cf3-82f5-45b6f0035a82)
	]
	coclass SimpleObject
	{
		interface ISimpleObject;
		[default]
        interface ISimpleObject2;
        [ default, source ]
        dispinterface _ISimpleObjectEvents;
	};
};

import "shobjidl.idl";
